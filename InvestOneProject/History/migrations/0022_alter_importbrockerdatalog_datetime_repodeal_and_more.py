# Generated by Django 4.1 on 2022-12-18 17:06

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("History", "0021_remove_historicalbrockerperiodiccommissions_bill_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="importbrockerdatalog",
            name="datetime",
            field=models.DateTimeField(
                default=datetime.datetime(2022, 12, 18, 20, 6, 19, 532307)
            ),
        ),
        migrations.CreateModel(
            name="RepoDeal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("operation_number", models.CharField(max_length=30)),
                ("datetime_first_part", models.DateTimeField()),
                ("datetime_second_part", models.DateTimeField()),
                (
                    "count_without_sign",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                (
                    "price_first_part",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                (
                    "price_second_part",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                ("commission", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "bill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="History.bill"
                    ),
                ),
                (
                    "commission_currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="History.currency",
                    ),
                ),
                (
                    "import_brocker_data_log",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="History.importbrockerdatalog",
                    ),
                ),
                (
                    "related_currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="History.currency",
                    ),
                ),
                (
                    "repo_currency",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="History.currency",
                    ),
                ),
                (
                    "repo_share",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="History.share",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalRepoDeal",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("operation_number", models.CharField(max_length=30)),
                ("datetime_first_part", models.DateTimeField()),
                ("datetime_second_part", models.DateTimeField()),
                (
                    "count_without_sign",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                (
                    "price_first_part",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                (
                    "price_second_part",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                ("commission", models.DecimalField(decimal_places=2, max_digits=15)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "bill",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="History.bill",
                    ),
                ),
                (
                    "commission_currency",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="History.currency",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "import_brocker_data_log",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="History.importbrockerdatalog",
                    ),
                ),
                (
                    "related_currency",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="History.currency",
                    ),
                ),
                (
                    "repo_currency",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="History.currency",
                    ),
                ),
                (
                    "repo_share",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="History.share",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical repo deal",
                "verbose_name_plural": "historical repo deals",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
